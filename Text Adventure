package game;

import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JLabel;

public class Game {
	
	JFrame window;
	Container game_container;
	JPanel title_panel, start_button_panel, main_panel, choices_panel;
	JLabel title_name;
	Font title_font = new Font ("Baskerville Old Face", Font.PLAIN, 100);
	Font text_font = new Font ("Times New Roman", Font.PLAIN, 40);
	Font story_font = new Font ("Times New Roman", Font.PLAIN, 33);
	JButton start_button, exit_button, choice1_button, choice2_button, choice3_button;
	JTextArea main_text_area;
	
	Starting_Point Enter_Town = new Starting_Point();
	Start_Game Enter_Game = new Start_Game();
	Exit_Game Exit_The_Game = new Exit_Game();
	
	int count = 0;
	String filePath = "C:/Programming/Java Codes/RPG_Game/Intro_Story.txt";
	String[] sentences = File_String_Array(filePath);
	
	public String[] File_String_Array(String filePath) {
		 StringBuilder fileContent = new StringBuilder();
	        
	        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
	            String line;
	            while ((line = reader.readLine()) != null) {
	                fileContent.append(line).append(" ");
	            }
	        } catch (IOException e) {
	            System.err.println("Error reading file: " + e.getMessage());
	            return null;
	        }

	        return fileContent.toString().split("(?<=[.!?])\\s+");
	}
	
	public void Remove_Action() {
		for (ActionListener AL : choice1_button.getActionListeners()) {
            choice1_button.removeActionListener(AL);
        }
        for (ActionListener AL : choice2_button.getActionListeners()) {
            choice2_button.removeActionListener(AL);
        }
        for (ActionListener AL : choice3_button.getActionListeners()) {
            choice3_button.removeActionListener(AL);
        }
	}
	
	public static void main(String[] args) {
		new Game();

	}
	
	public Game() {
		JFrame window = new JFrame();
		window.setSize(800,600);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		window.getContentPane().setBackground(Color.black);
		window.setLayout(null);
		window.setTitle("Text Adventure");
		window.setResizable(false);
		window.setLocationRelativeTo(null);
		game_container = window.getContentPane();
		
		title_panel = new JPanel();
		title_panel.setBounds(94, 120, 600, 150);
		title_panel.setBackground(Color.black);
		title_name = new JLabel("Dark Horizon");
		title_name.setForeground(Color.white);
		title_name.setFont(title_font);

		start_button_panel = new JPanel();
		start_button_panel.setBounds(295, 380, 200, 100);
		start_button_panel.setBackground(Color.black);
		
		start_button = new JButton("START");
		start_button.setBackground(Color.black);
		start_button.setForeground(Color.white);
		start_button.setFont(text_font);
		start_button.setBorder(null);
		start_button.addActionListener(Enter_Game);
		
		exit_button = new JButton("EXIT");
		exit_button.setBackground(Color.black);
		exit_button.setForeground(Color.white);
		exit_button.setFont(text_font);
		exit_button.setBorder(null);
		exit_button.addActionListener(Exit_The_Game);
		
		title_panel.add(title_name);
		start_button_panel.add(start_button);
		start_button_panel.add(exit_button);
		
		game_container.add(title_panel);
		game_container.add(start_button_panel);
		
		window.setVisible(true);
	}
	
	public void GameScreen() {	
		title_panel.setVisible(false);
		start_button_panel.setVisible(false);
		
		if (main_panel != null) game_container.remove(main_panel);
        if (choices_panel != null) game_container.remove(choices_panel);
        
		main_panel = new JPanel();
		main_panel.setBounds(20, 100, 750, 250);
		main_panel.setBackground(Color.black);
		game_container.add(main_panel);
		
		main_text_area = new JTextArea();
		main_text_area.setBounds(100, 100, 750, 250);
		main_text_area.setBackground(Color.black);
		main_text_area.setForeground(Color.white);
		main_text_area.setFont(story_font);
		main_text_area.setLineWrap(true);
		main_panel.add(main_text_area);
		
		choices_panel = new JPanel();
		choices_panel.setBounds(295, 380, 200, 200);
		choices_panel.setBackground(Color.black);
		game_container.add(choices_panel);
		
		choice1_button = new JButton("choice 1");
		choice1_button.setBackground(Color.black);
		choice1_button.setForeground(Color.white);
		choice1_button.setFont(text_font);
		choice1_button.setBorder(null);
		choices_panel.add(choice1_button);
		
		choice2_button = new JButton("choice 2");
		choice2_button.setBackground(Color.black);
		choice2_button.setForeground(Color.white);
		choice2_button.setFont(text_font);
		choice2_button.setBorder(null);
		choices_panel.add(choice2_button);
		
		choice3_button = new JButton("chooce 3");
		choice3_button.setBackground(Color.black);
		choice3_button.setForeground(Color.white);
		choice3_button.setFont(text_font);
		choice3_button.setBorder(null);
		choices_panel.add(choice3_button);
		
		StoryScreen();
	}
	
	public class Start_Game implements ActionListener {
		
		public void actionPerformed (ActionEvent event) {
			GameScreen();
			
			String user_choice = event.getActionCommand();
			
			try {
		        if (user_choice.equals("next")) {
		            if (count < sentences.length - 1) {  
		                count++;
		            }
		        } else if (user_choice.equals("back")) {
		            if (count > 0) {  
		                count--;
		            }
		        }
		    } catch (ArrayIndexOutOfBoundsException exception) {
		        
		    } finally {
		        main_text_area.setText(sentences[count]);
		    }
		}
	}
	
	public class Exit_Game implements ActionListener {
		
		public void actionPerformed (ActionEvent event) {
			System.exit(0);
		}
	}
	
	public void StoryScreen() {
		main_text_area.setText(sentences[count]);

		choice1_button.setText("NEXT");
		choice1_button.addActionListener(Enter_Game);
		choice1_button.setActionCommand("next");
		
		choice2_button.setText("BACK");
		choice2_button.addActionListener(Enter_Game);
		choice2_button.setActionCommand("back");
		
		choice3_button.setText("FINISH");
		choice3_button.setVisible(false);
		
		if (count == sentences.length - 2) {
			choice3_button.setVisible(true);
			choice3_button.addActionListener(Enter_Town);
		}
	}
	
	public class Starting_Point implements ActionListener {
		
		public void actionPerformed (ActionEvent event) {
			Remove_Action();
			main_text_area.setText("Welcome to Town!");
			
			choice1_button.setText("Tavern");
			choice1_button.addActionListener(new ActionListener() {
	            public void actionPerformed(ActionEvent e) {
	            	Tavern();
	            }
	        });
			
			choice2_button.setText("Shop");
			choice1_button.addActionListener(new ActionListener() {
	            public void actionPerformed(ActionEvent e) {
	            	Shop();
	            }
	        });
			
			choice3_button.setText("Dungeon");
			choice1_button.addActionListener(new ActionListener() {
	            public void actionPerformed(ActionEvent e) {
	            	Dungeon();
	            }
	        });
		}
	}
	
	public void Tavern() {
		main_text_area.setText("");
		
		choice1_button.setText("");
		choice1_button.setActionCommand("");
		
		choice2_button.setText("");
		choice2_button.setActionCommand("");
		
		choice3_button.setText("");
		choice3_button.setActionCommand("");
	}
	
	public void Shop() {
		main_text_area.setText("");
		
		choice1_button.setText("");
		choice1_button.setActionCommand("");
		
		choice2_button.setText("");
		choice2_button.setActionCommand("");
		
		choice3_button.setText("");
		choice3_button.setActionCommand("");
	}
	
	public void Dungeon() {
		main_text_area.setText("");
		
		choice1_button.setText("");
		choice1_button.setActionCommand("");
		
		choice2_button.setText("");
		choice2_button.setActionCommand("");
		
		choice3_button.setText("");
		choice3_button.setActionCommand("");
	}
}
	
